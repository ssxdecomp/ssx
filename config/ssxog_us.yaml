name: SSX (2000) (USA)
sha1: 72d85fcefffc2bcaa1eeacbc02a8965ababb6e92

options:
  basename: SLUS_200.95
  target_path: disc/SLUS_200.95
  elf_path: SLUS_200.95
  base_path: ../
  platform: ps2
  compiler: EEGCC
  endianness: little

  asm_path: asm
  src_path: src/
  build_path: obj

  # Put 'hasm' splits in src/
  hasm_in_src_path: True

  use_legacy_include_asm: False

  disasm_unknown: True
  rodata_string_guesser_level: 2
  data_string_guesser_level: 2
  find_file_boundaries: True
  pair_rodata_to_text: True
  auto_decompile_empty_functions: True
  do_c_func_detection: True
  suggestion_rodata_section_start: True
  migrate_rodata_to_functions: True

  named_regs_for_c_funcs: False

  use_gp_rel_macro_nonmatching: False

  create_undefined_funcs_auto: True
  undefined_funcs_auto_path: config/undefined_funcs_auto.txt
  create_undefined_syms_auto: True
  undefined_syms_auto_path: config/undefined_syms_auto.txt

  symbol_addrs_path: [ 
    config/symbol_addrs.txt, 
    config/sdk_symbol_addrs.txt,
    config/eac_symbol_addrs.txt
  ]

  extensions_path: tools/splat_ext

  section_order: [
    ".text", 
    ".vutext", 
    ".reginfo", 
    ".data", 
    ".vudata", 
    ".rodata", 
    ".lit4", 
    ".sdata", 
    ".sbss", 
    ".bss", 
    ".vubss"
  ]

  auto_link_sections: [
    ".text", 
    ".data", 
    ".rodata", 
    ".lit4", 
    ".sdata", 
    ".sbss", 
    ".bss",
  ]

  gp_value: 0x002c8ff0


segments:
  - name: elf_header
    type: databin
    start: 0x0

  - name: main
    type: code
    start: 0x1000
    vram: 0x100000
    bss_size: 0x1227c # I think?
    align: 4
    subalign: null
    subsegments:
      # -- .text

      - { type: asm, start: 0x001000, vram: 0x100000, name: lib/sdk/sce/crt0 }

      # start of actual sources (besides crt0)

      - { type: asm, start: 0x0010b8 }  # seems to be ai related based on MEM_alloc/cBlockMan::Alloc strings
                                        # cAINode memfns are suspiciously close to this split so this might be
                                        # ainode.cpp ? unsure
                                        # order is suspect of this being the case, since this split also contains
                                        # the first static initalizer function

      - { type: cpp, start: 0x8b648, name: bx/main/main }

      - { type: asm, start: 0x8bc08, name: lib/sdk/newlib/printf }

      - { type: cpp, start: 0x8bc50, name: bx/main/venuedb }
      
      - { type: asm, start: 0x8bec8, name: bx/unk_global_memory_operators }

      # -- end of text

      # --- .vutext
      - { type: databin, start: 0x16b260, vram: 0x26a260, name: vutext }


      # --- .data
      - { type: data, start: 0x178900, vram: 0x277900, name: data }
      - { type: data, start: 0x17f140, vram: 0x27e140, name: bx/main/venuedb } # note: rodata 0x002af6c0 is where the strings for venueDB start, so probably
                                                                          # that's also part of rodata for this tu

      # --- .vudata
      - { type: databin, vram: 0x2a6ab8, start: 0x1a7ab8, name: vudata }

      # --- .rodata
      - { type: rodata, start: 0x1a7b00, vram: 0x2a6b00, name: rodata }
      #- { type: .rodata, start: 0x1b4ce0, vram: 0x2b3ce0, name: bx/main/venuedb }

      # --- .lit4 (TODO: SPLIT)
      - { type: lit4, vram: 0x2c1000, start: 0x1c2000, name: lit4 }

      # -- SDATA
      - { type: sdata, vram: 0x2c3f80, start: 0x1c4f80, name: sdata }

      # -- SBSS (TODO!!! SPLIT!!!)
      - { type: sbss, vram: 0x2c5b80, start: 0x1c6b80, name: sbss }


      # -- BSS (TODO!! SPLIT!!)
      - { type: bss, vram: 0x2c6c80, start: 0x1c6bf4, name: bss }

      # -- VUBSS
      - { type: bss, vram: 0x2d7f0c, start: 0x1c6bf4, name: vubss }

  #- { type: databin, start: 0x1c6bf4, name: reginfo } # .reginfo section
  - { type: databin, start: 0x1d3c4b, name: shstrtab }

  # Unknown padding right after .shstrtab
  - { type: databin, start: 0x1d4331, name: padding }
  - [0x1d4c1c]
